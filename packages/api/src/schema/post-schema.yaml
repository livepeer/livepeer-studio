components:
  schemas:
    access-control-gate-payload:
      additionalProperties: false
      properties:
        accessKey:
          description: Access key used for access-control verification
          type: string
        pub:
          description: Base64 of Public key used for JWT verification
          type: string
        stream:
          description: Stream ID to which this gate applies
          type: string
        type:
          enum:
            - jwt
            - accessKey
          type: string
      required:
        - type
        - stream
      type: object
    api-token:
      additionalProperties: false
      properties:
        access:
          additionalProperties: false
          properties:
            cors:
              additionalProperties: false
              properties:
                allowedOrigins:
                  default: []
                  description: >-
                    Origins from which the token can be used. If empty, CORS
                    will be prohibited by default (safest). To allow all origin
                    values set this to `[*]`.
                  items:
                    example: 'https://example.com'
                    type: string
                  type: array
                fullAccess:
                  default: false
                  description: >-
                    Whether the token grants full access to the API. If false,
                    the token will only have access to some pre-defined
                    endpoints, not expose the whole account from the webpage.
                  type: boolean
              type: object
            rules:
              default:
                - resources:
                    - '*'
              items:
                additionalProperties: false
                properties:
                  methods:
                    default:
                      - '*'
                    items:
                      enum:
                        - post
                        - get
                        - put
                        - patch
                        - delete
                        - head
                        - options
                        - '*'
                      type: string
                    minItems: 1
                    type: array
                  resources:
                    items:
                      type: string
                    minItems: 1
                    type: array
                required:
                  - resources
                type: object
              type: array
          type: object
        createdAt:
          description: Timestamp (in milliseconds) at which token object was created
          example: 1587667174725
          readOnly: true
          type: number
        id:
          example: 09F8B46C-61A0-4254-9875-F71F4C605BC7
          type: string
        kind:
          example: user
          readOnly: true
          type: string
        lastSeen:
          example: 1587667174725
          type: number
        name:
          example: Example Token
          type: string
        userId:
          example: 66E2161C-7670-4D05-B71D-DA2D6979556F
          index: true
          type: string
      table: api_token
      type: object
    asset:
      additionalProperties: false
      properties:
        createdAt:
          description: Timestamp (in milliseconds) at which asset was created
          example: 1587667174725
          readOnly: true
          type: number
        deleted:
          description: Set to true when the asset is deleted
          type: boolean
        deletedAt:
          description: Timestamp (in milliseconds) at which the asset was deleted
          example: 1587667174725
          type: number
        downloadUrl:
          description: URL to manually download the asset if desired
          example: 'https://livepeercdn.com/asset/eaw4nk06ts2d0mzb/video'
          readOnly: true
          type: string
        files:
          description: Internal field with the list of files stored in the object store
          items:
            additionalProperties: false
            properties:
              path:
                description: >-
                  Path to the file in the asset subfolder in the object store.
                  This means that all these paths are relative to a folder in
                  the OS the asset playback ID as the name.
                example: /path/to/file
                type: string
              spec:
                additionalProperties: false
                description: >-
                  Additional information about the file. For example, for
                  manifests it contains the list of media files.
                properties:
                  bitrate:
                    description: Bitrate of the video in bits per second.
                    example: 1000000
                    type: number
                  height:
                    description: Height of the video in pixels.
                    example: 1080
                    type: number
                  size:
                    description: Size of the file in bytes.
                    example: 123456
                    type: number
                  width:
                    description: Width of the video in pixels.
                    example: 1920
                    type: number
                type: object
              type:
                description: Type of the file in the VOD system.
                example: catalyst_hls_manifest
                type: string
            required:
              - type
              - path
            type: object
          type: array
          writeOnly: true
        hash:
          description: Hash of the asset
          items:
            additionalProperties: false
            properties:
              algorithm:
                description: Hash algorithm used to compute the hash
                example: sha256
                type: string
              hash:
                description: Hash of the asset
                example: >-
                  9b560b28b85378a5004117539196ab24e21bbd75b0e9eb1a8bc7c5fd80dc5b57
                type: string
            type: object
          type: array
        id:
          example: 09F8B46C-61A0-4254-9875-F71F4C605BC7
          index: true
          readOnly: true
          type: string
        name:
          description: >-
            Name of the asset. This is not necessarily the filename, can be a
            custom name or title
          example: filename.mp4
          type: string
        objectStoreId:
          description: Object store ID where the asset is stored
          example: 09F8B46C-61A0-4254-9875-F71F4C605BC7
          type: string
          writeOnly: true
        playbackId:
          description: Used to form playback URL and storage folder
          example: eaw4nk06ts2d0mzb
          index: true
          type: string
        playbackPolicy:
          $ref: '#/components/schemas/playback-policy'
        playbackRecordingId:
          description: Used to form recording URL for HLS playback
          example: ea03f37e-f861-4cdd-b495-0e60b6d753ad
          index: true
          type: string
          writeOnly: true
        playbackUrl:
          description: URL for HLS playback
          example: >-
            https://livepeercdn.com/asset/ea03f37e-f861-4cdd-b495-0e60b6d753ad/index.m3u8
          readOnly: true
          type: string
        size:
          description: Size of the asset in bytes
          example: 84934509
          readOnly: true
          type: number
        source:
          oneOf:
            - additionalProperties: false
              required:
                - type
                - url
              properties:
                type:
                  type: string
                  enum:
                    - url
                url:
                  type: string
                  description: URL from which the asset was uploaded
                  index: true
                encryption:
                  $ref: '#/components/schemas/new-asset-payload/properties/encryption'
            - additionalProperties: false
              required:
                - type
              properties:
                type:
                  type: string
                  enum:
                    - directUpload
                encryption:
                  $ref: '#/components/schemas/new-asset-payload/properties/encryption'
            - additionalProperties: false
              required:
                - type
                - sessionId
              properties:
                type:
                  type: string
                  enum:
                    - recording
                sessionId:
                  type: string
                  description: ID of the session from which this asset was created
            - additionalProperties: false
              required:
                - type
                - inputAssetId
              properties:
                type:
                  type: string
                  enum:
                    - transcode
                inputAssetId:
                  type: string
                  description: >-
                    ID of the source asset that was processed by a transcode
                    task to create this asset
        sourceAssetId:
          description: 'ID of the source asset (root) - If missing, this is a root asset'
          example: 09F8B46C-61A0-4254-9875-F71F4C605BC7
          index: true
          readOnly: true
          type: string
        staticMp4:
          description: Whether to generate MP4s for the asset.
          type: boolean
          writeOnly: true
        status:
          additionalProperties: false
          description: Status of the asset
          properties:
            errorMessage:
              description: Error message if the asset creation failed.
              type: string
            phase:
              description: Phase of the asset
              enum:
                - uploading
                - waiting
                - processing
                - ready
                - failed
              type: string
            progress:
              description: Current progress of the task creating this asset.
              type: number
            updatedAt:
              description: Timestamp (in milliseconds) at which the asset was last updated
              example: 1587667174725
              type: number
          readOnly: true
          required:
            - phase
            - updatedAt
          type: object
        storage:
          additionalProperties: false
          properties:
            ipfs:
              additionalProperties: false
              properties:
                $ref: '#/components/schemas/ipfs-file-info/properties'
                nftMetadata:
                  $ref: '#/components/schemas/ipfs-file-info'
                spec:
                  additionalProperties: false
                  default: {}
                  properties:
                    nftMetadata:
                      description: >-
                        Additional data to add to the NFT metadata exported to
                        IPFS. Will be deep merged with the default metadata
                        exported.
                      type: object
                    nftMetadataTemplate:
                      default: file
                      description: >-
                        Name of the NFT metadata template to export. 'player'
                        will embed the Livepeer Player on the NFT while 'file'
                        will reference only the immutable MP4 files.
                      enum:
                        - file
                        - player
                      type: string
                  type: object
                updatedAt:
                  description: >-
                    Timestamp (in milliseconds) at which IPFS export task was
                    updated
                  example: 1587667174725
                  readOnly: true
                  type: number
              type: object
            status:
              additionalProperties: false
              properties:
                errorMessage:
                  description: Error message if the last storage changed failed.
                  type: string
                phase:
                  description: Phase of the asset storage
                  enum:
                    - waiting
                    - processing
                    - ready
                    - failed
                    - reverted
                  type: string
                progress:
                  description: Current progress of the task updating the storage.
                  type: number
                tasks:
                  additionalProperties: false
                  properties:
                    failed:
                      description: ID of the last task to fail execution.
                      type: string
                    last:
                      description: >-
                        ID of the last task to run successfully, that created
                        the currently saved data.
                      type: string
                    pending:
                      description: >-
                        ID of any currently running task that is exporting this
                        asset to IPFS.
                      type: string
                  type: object
              readOnly: true
              required:
                - phase
                - tasks
        type:
          description: Type of the asset.
          enum:
            - video
            - audio
          example: video
          type: string
        userId:
          description: owner of the asset
          example: 66E2161C-7670-4D05-B71D-DA2D6979556F
          index: true
          readOnly: true
          type: string
        videoSpec:
          additionalProperties: false
          description: Video metadata
          properties:
            bitrate:
              description: Bitrate of the video in bits per second
              example: 1000000
              type: number
            duration:
              description: Duration of the asset in seconds (float)
              example: 23.8328
              type: number
            format:
              description: Format of the asset
              example: mp4
              type: string
            tracks:
              description: >-
                List of tracks associated with the asset when the format
                contemplates them (e.g. mp4)
              items:
                additionalProperties: false
                properties:
                  bitDepth:
                    description: Bit depth of the track - only for audio tracks
                    example: 16
                    type: number
                  bitrate:
                    description: Bitrate of the track in bits per second
                    example: 1000000
                    type: number
                  channels:
                    description: Amount of audio channels in the track
                    example: 2
                    type: number
                  codec:
                    description: Codec of the track
                    example: aac
                    type: string
                  duration:
                    description: Duration of the track in seconds
                    example: 23.8238
                    type: number
                  fps:
                    description: Frame rate of the track - only for video tracks
                    example: 30
                    type: number
                  height:
                    description: Height of the track - only for video tracks
                    example: 1080
                    type: number
                  pixelFormat:
                    description: Pixel format of the track - only for video tracks
                    example: yuv420p
                    type: string
                  sampleRate:
                    description: >-
                      Sample rate of the track in samples per second - only for
                      audio tracks
                    example: 44100
                    type: number
                  startTime:
                    description: Start time of the track in seconds
                    example: 23.8238
                    type: number
                  type:
                    description: type of track
                    enum:
                      - video
                      - audio
                    example: video
                    type: string
                  width:
                    description: Width of the track - only for video tracks
                    example: 1920
                    type: number
                required:
                  - type
                  - codec
                type: object
              type: array
          readOnly: true
          type: object
      required:
        - id
        - name
        - source
      table: asset
      type: object
    asset-patch-payload:
      additionalProperties: false
      properties:
        name:
          $ref: '#/components/schemas/asset/properties/name'
        playbackPolicy:
          $ref: '#/components/schemas/playback-policy'
        storage:
          $ref: '#/components/schemas/new-asset-payload/properties/storage'
      type: object
    cdn-data-payload:
      items:
        additionalProperties: false
        properties:
          data:
            items:
              $ref: '#/components/schemas/cdn-data-row'
            minItems: 1
            type: array
          date:
            type: number
          file_name:
            type: string
          region:
            type: string
        required:
          - region
          - file_name
          - date
          - data
        type: object
      type: array
    cdn-data-row:
      additionalProperties: false
      description: >-
        Fields names taken from log format description
        https://support.highwinds.com/hc/en-us/articles/360052181571-Raw-Log-Access-through-GCS
      properties:
        count:
          description: Number of parsed log lines
          type: number
        playback_id:
          description: Playback ID.
          type: string
        stream_id:
          description: Session UUID. Used in recordings URLs.
          type: string
        total_cs_bytes:
          description: The total size of the request header.
          type: number
        total_filesize:
          description: Size of the asset being delivered.
          type: number
        total_sc_bytes:
          description: Total bytes in the response to the client.
          type: number
        unique_client_ips:
          description: >-
            Number of unique IP addresses of clients. Not accurate because
            StackPath zeroes last part of the IP address.
          type: number
      required:
        - unique_client_ips
        - total_sc_bytes
      type: object
    cdn-usage-last:
      additionalProperties: false
      properties:
        fileName:
          index: true
          type: number
        id:
          example: de7818e7-610a-4057-8f6f-b785dc1e6f88
          readOnly: true
          type: string
        region:
          index: true
          type: string
          unique: true
      required:
        - region
        - fileName
      table: cdn_usage_last
      type: object
    create-customer:
      additionalProperties: false
      properties:
        email:
          description: user email address
          example: useremail@gmail.com
          type: string
      required:
        - email
      type: object
    create-subscription:
      additionalProperties: false
      properties:
        stripeCustomerId:
          description: stripe customer id
          example: cus_xxxxxxxxxxxxxx
          type: string
        stripeCustomerPaymentMethodId:
          description: stripe payment method id
          example: src_xxxxxxxxxxxxxxxxxxxxxxxx
          type: string
        stripeProductId:
          description: stripe product id
          enum:
            - prod_0
            - prod_1
            - prod_2
          type: string
      required:
        - stripeCustomerId
        - stripeProductId
      type: object
    deactivate-many-payload:
      additionalProperties: false
      properties:
        ids:
          items:
            type: string
          minItems: 1
          type: array
      type: object
    detection-webhook-payload:
      properties:
        manifestID:
          type: string
        sceneClassification:
          items:
            properties:
              name:
                type: string
              probability:
                type: number
            required:
              - name
              - probability
            type: object
          type: array
        seqNo:
          type: number
      required:
        - manifestID
        - seqNo
        - sceneClassification
      type: object
    error:
      properties:
        errors:
          items:
            example:
              - id not provided
              - user not found
            type: string
          minItems: 1
          type: array
      required:
        - errors
      type: object
    experiment:
      additionalProperties: false
      properties:
        audienceUserIds:
          description: List of user IDs in the experiment
          index: true
          indexType: gin
          items:
            type: string
          type: array
        audienceUsers:
          description: User objects of users in the experiment for convenience
          items:
            $ref: '#/components/schemas/user'
          readOnly: true
          type: array
        createdAt:
          description: Timestamp (in milliseconds) at which the experiment was created
          example: 1587667174725
          readOnly: true
          type: number
        name:
          description: Name that identifies the experiment. Must be unique
          index: true
          type: string
          unique: true
        updatedAt:
          description: Timestamp (in milliseconds) at which experiment was updated
          example: 1587667174725
          readOnly: true
          type: number
        userId:
          description: >-
            User ID of the creator of the experiment. Only used for auditing as
            experiment APIs is only accessible to admins, which can all
            experiments anyway.
          index: true
          type: string
      required:
        - name
      table: experiment
      type: object
    experiment-audience-payload:
      additionalProperties: false
      properties:
        addUsers:
          items:
            description: Email or ID of users that should be added to the experiment
            type: string
          type: array
        removeUsers:
          items:
            description: Email or ID of users that should be removed from the experiment
            type: string
          type: array
      type: object
    export-task-params:
      description: Parameters for the export task
      oneOf:
        - type: object
          additionalProperties: false
          required:
            - custom
          properties:
            custom:
              type: object
              description: custom URL parameters for the export task
              additionalProperties: false
              required:
                - url
              properties:
                url:
                  type: string
                  format: uri
                  pattern: '^http(s)?://'
                  description: URL where to export the asset
                  example: >-
                    https://s3.amazonaws.com/my-bucket/path/filename.mp4?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=LLMMB
                method:
                  type: string
                  description: Method to use on the export request
                  default: PUT
                headers:
                  type: object
                  description: Headers to add to the export request
                  additionalProperties:
                    type: string
        - type: object
          additionalProperties: false
          required:
            - ipfs
          properties:
            ipfs:
              type: object
              additionalProperties: false
              properties:
                $ref: >-
                  #/components/schemas/asset/properties/storage/properties/ipfs/properties/spec/properties
                pinata:
                  description: >-
                    Custom credentials for the Piñata service. Must have either
                    a JWT or an API key and an API secret.
                  oneOf:
                    - type: object
                      additionalProperties: false
                      required:
                        - jwt
                      properties:
                        jwt:
                          type: string
                          writeOnly: true
                          description: >-
                            Will be added to the Authorization header as a
                            Bearer token.
                    - type: object
                      additionalProperties: false
                      required:
                        - apiKey
                        - apiSecret
                      properties:
                        apiKey:
                          type: string
                          description: Will be added to the pinata_api_key header.
                        apiSecret:
                          type: string
                          writeOnly: true
                          description: Will be added to the pinata_secret_api_key header.
    ffmpeg-profile:
      additionalProperties: false
      description: LMPS ffmpeg profile
      properties:
        bitrate:
          minimum: 400
          type: integer
        encoder:
          enum:
            - h264
            - hevc
            - vp8
            - vp9
          type: string
        fps:
          minimum: 0
          type: integer
        fpsDen:
          minimum: 1
          type: integer
        gop:
          type: string
        height:
          minimum: 128
          type: integer
        name:
          example: 720p
          maxLength: 500
          minLength: 1
          type: string
        profile:
          enum:
            - H264Baseline
            - H264Main
            - H264High
            - H264ConstrainedHigh
          type: string
        width:
          minimum: 128
          type: integer
      required:
        - width
        - name
        - height
        - bitrate
        - fps
      type: object
    ipfs-file-info:
      additionalProperties: false
      properties:
        cid:
          description: CID of the file on IPFS
          index: true
          type: string
        gatewayUrl:
          description: URL to access file via HTTP through an IPFS gateway
          readOnly: true
          type: string
        url:
          description: URL with IPFS scheme for the file
          readOnly: true
          type: string
      required:
        - cid
      type: object
    make-admin:
      additionalProperties: false
      properties:
        admin:
          example: true
          type: boolean
        email:
          description: user email address
          example: useremail@gmail.com
          type: string
      required:
        - email
        - admin
      type: object
    multistream-target:
      additionalProperties: false
      properties:
        createdAt:
          description: >-
            Timestamp (in milliseconds) at which multistream target object was
            created
          example: 1587667174725
          readOnly: true
          type: number
        disabled:
          description: >-
            If true then this multistream target will not be used for pushing
            even if it is configured in a stream object.
          type: boolean
        id:
          example: 09F8B46C-61A0-4254-9875-F71F4C605BC7
          readOnly: true
          type: string
        name:
          type: string
        url:
          description: Livepeer-compatible multistream target URL (RTMP(S) or SRT)
          example: 'rtmps://live.my-service.tv/channel/secretKey'
          format: uri
          pattern: '^(srt|rtmps?)://'
          type: string
          writeOnly: true
        userId:
          example: 66E2161C-7670-4D05-B71D-DA2D6979556F
          index: true
          readOnly: true
          type: string
      required:
        - url
      table: multistream_target
      type: object
    multistream-target-patch-payload:
      $ref: '#/components/schemas/multistream-target'
      required: []
      table: null
    new-asset-payload:
      additionalProperties: false
      properties:
        catalystPipelineStrategy:
          $ref: >-
            #/components/schemas/task/properties/params/properties/upload/properties/catalystPipelineStrategy
        encryption:
          additionalProperties: false
          properties:
            algorithm:
              default: aes-cbc
              description: >-
                Encryption algorithm used to encrypt the asset, defaults to AES
                in CBC block cipher mode.
              enum:
                - aes-cbc
              type: string
            key:
              description: >-
                Encryption key used to encrypt the asset encoded in base16. Only
                writable in the upload asset endpoints and cannot be retrieved
                back.
              example: 74686973206d65616e73206e6f7468696e672120676f2061776179206672656e
              type: string
              writeOnly: true
          required:
            - key
          type: object
        name:
          description: >-
            Name of the asset. This is not necessarily the filename, can be a
            custom name or title
          example: filename.mp4
          type: string
        objectStoreId:
          description: Object store ID where the asset is stored
          example: 09F8B46C-61A0-4254-9875-F71F4C605BC7
          type: string
          writeOnly: true
        playbackPolicy:
          $ref: '#/components/schemas/playback-policy'
        staticMp4:
          description: Whether to generate MP4s for the asset.
          example: true
          type: boolean
        storage:
          additionalProperties: false
          properties:
            ipfs:
              description: >-
                Set to true to make default export to IPFS. To customize the
                pinned files, specify an object with a spec field. False or null
                means to unpin from IPFS, but it's unsupported right now.
              oneOf:
                - type: object
                  additionalProperties: false
                  properties:
                    spec:
                      oneOf:
                        - type: 'null'
                        - $ref: >-
                            #/components/schemas/asset/properties/storage/properties/ipfs/properties/spec
                - type: boolean
                - type: 'null'
        url:
          description: >-
            URL where the asset contents can be retrieved. Only valid for the
            import task endpoint.
          example: 'https://s3.amazonaws.com/my-bucket/path/filename.mp4'
          format: uri
          pattern: '^(https?|ipfs|ar)://'
          type: string
      required:
        - name
    new-signing-key-payload:
      additionalProperties: false
      properties:
        name:
          description: Name of the signing key
          type: string
    object-store:
      additionalProperties: false
      properties:
        createdAt:
          description: Timestamp (in milliseconds) at which object store object was created
          example: 1587667174725
          readOnly: true
          type: number
        deleted:
          description: Set to true when the object store is deleted
          type: boolean
        disabled:
          description: >-
            If true then these object store will not be used for recording even
            if it is configured in the API command line.
          type: boolean
        id:
          example: 09F8B46C-61A0-4254-9875-F71F4C605BC7
          type: string
        name:
          type: string
        publicUrl:
          description: Public URL at which data in this object storage can be accessed
          example: 'https://reg-rec.livepeer.live/some/path'
          type: string
        url:
          description: Livepeer-compatible object store URL
          example: 's3://access-key:secret-key@us-west-2/bucket-name'
          type: string
          writeOnly: true
        userId:
          example: 66E2161C-7670-4D05-B71D-DA2D6979556F
          index: true
          type: string
      required:
        - url
      table: object_store
      type: object
    object-store-patch-payload:
      additionalProperties: false
      properties:
        disabled:
          $ref: '#/components/schemas/object-store/properties/disabled'
        name:
          $ref: '#/components/schemas/object-store/properties/name'
        publicUrl:
          $ref: '#/components/schemas/object-store/properties/publicUrl'
        url:
          $ref: '#/components/schemas/object-store/properties/url'
      type: object
    password-reset-confirm:
      additionalProperties: false
      properties:
        email:
          description: user email address
          example: useremail@gmail.com
          index: true
          type: string
        password:
          example: thisisapassword
          maxLength: 64
          minLength: 64
          type: string
        resetToken:
          example: E1F53135E559C253
          type: string
          writeOnly: true
        userId:
          example: 66E2161C-7670-4D05-B71D-DA2D6979556F
          index: true
          type: string
      required:
        - email
        - resetToken
        - password
      type: object
    password-reset-token:
      additionalProperties: false
      properties:
        expiration:
          description: Timestamp (in milliseconds) at which reset token will be expired
          example: 1587667174725
          readOnly: true
          type: number
        kind:
          enum:
            - password-reset-token
          readOnly: true
          type: string
        resetToken:
          example: E1F53135E559C253
          type: string
          writeOnly: true
        userId:
          example: 66E2161C-7670-4D05-B71D-DA2D6979556F
          index: true
          readOnly: true
          type: string
      required:
        - kind
        - userId
        - resetToken
        - expiration
      table: password_reset_token
      type: object
    password-reset-token-request:
      additionalProperties: false
      properties:
        email:
          description: user email address
          example: useremail@gmail.com
          type: string
      required:
        - email
      type: object
    playback-policy:
      additionalProperties: false
      description: Whether the playback policy for a asset or stream is public or signed
      properties:
        resourceId:
          additionalProperties: false
          description: LIT Resource ID
          properties:
            baseUrl:
              type: string
            extraData:
              type: string
            orgId:
              type: string
            path:
              type: string
            role:
              type: string
          required:
            - baseUrl
            - path
            - orgId
            - role
            - extraData
          type: object
        type:
          enum:
            - public
            - jwt
            - webhook
            - lit_signing_condition
          type: string
        unifiedAccessControlConditions:
          description: LIT Unified Access Control Conditions
          items:
            type: object
          type: array
        webhookContext:
          additionalProperties: true
          description: User-defined webhook context
          type: object
        webhookId:
          description: ID of the webhook to use for playback policy
          type: string
      required:
        - type
      type: object
    region:
      properties:
        orchestrators:
          items:
            additionalProperties: false
            properties:
              address:
                type: string
            required:
              - address
            type: object
          type: array
        region:
          description: region name
          example: ber
          index: true
          type: string
          unique: true
      required:
        - region
        - orchestrators
      table: regions
      type: object
    retrieve-customer-payment-method:
      additionalProperties: false
      properties:
        stripeCustomerPaymentMethodId:
          description: stripe payment method id
          example: src_xxxxxxxxxxxxxxxxxxxxxxxx
          type: string
      required:
        - stripeCustomerPaymentMethodId
      type: object
    session:
      additionalProperties: false
      properties:
        broadcasterHost:
          description: Hostname of the broadcaster that transcodes that stream
          type: string
        createdAt:
          description: Timestamp (in milliseconds) at which stream object was created
          example: 1587667174725
          index: true
          readOnly: true
          type: number
        deleted:
          description: Set to true when stream deleted
          type: boolean
        id:
          example: de7818e7-610a-4057-8f6f-b785dc1e6f88
          readOnly: true
          type: string
        ingestRate:
          description: Rate at which sourceBytes increases (bytes/second)
          example: 1
          type: number
        kind:
          example: stream
          readOnly: true
          type: string
        lastSeen:
          example: 1587667174725
          index: true
          type: number
        mp4Url:
          description: URL for the stream session recording packaged in an mp4.
          readOnly: true
          type: string
        name:
          example: test_session
          type: string
        outgoingRate:
          description: Rate at which transcodedBytes increases (bytes/second)
          example: 2
          type: number
        parentId:
          description: Points to parent stream object
          example: de7818e7-610a-4057-8f6f-b785dc1e6f88
          index: true
          type: string
        playbackId:
          description: Used to form playback URL
          example: eaw4nk06ts2d0mzb
          type: string
        profiles:
          items:
            $ref: '#/components/schemas/ffmpeg-profile'
          type: array
        record:
          description: >-
            Should this stream be recorded? Uses default settings. For more
            customization, create and configure an object store.
          example: false
          type: boolean
        recordObjectStoreId:
          description: ID of object store where to which this stream was recorded
          example: D8321C3E-B29C-45EB-A1BB-A623D8BE0F65
          type: string
        recordingStatus:
          description: Status of the recording process of this stream session.
          enum:
            - waiting
            - ready
            - none
          readOnly: true
          type: string
        recordingUrl:
          description: URL for accessing the recording of this stream session.
          readOnly: true
          type: string
        sourceBytes:
          example: 1
          type: number
        sourceSegments:
          example: 1
          type: number
        sourceSegmentsDuration:
          description: 'Duration of all the source segments, sec'
          example: 1
          type: number
        transcodedBytes:
          example: 2
          type: number
        transcodedSegments:
          example: 2
          type: number
        transcodedSegmentsDuration:
          description: 'Duration of all the transcoded segments, sec'
          example: 2
          type: number
        userId:
          example: 66E2161C-7670-4D05-B71D-DA2D6979556F
          index: true
          type: string
      required:
        - name
        - streamId
      table: session
      type: object
    signing-key:
      additionalProperties: false
      properties:
        createdAt:
          description: Timestamp (in milliseconds) at which the signing-key was created
          example: 1587667174725
          readOnly: true
          type: number
        deleted:
          default: false
          type: boolean
        disabled:
          description: Disable the signing key to allow rotation safely
          type: boolean
        id:
          example: 78df0075-b5f3-4683-a618-1086faca35dc
          index: true
          readOnly: true
          type: string
        lastSeen:
          description: Timestamp (in milliseconds) at which the signing-key was last used
          example: 1587667174725
          readOnly: true
          type: number
        name:
          description: Name of the signing key
          type: string
        publicKey:
          type: string
        userId:
          example: 78df0075-b5f3-4683-a618-1086faca35dc
          index: true
          readOnly: true
          type: string
      required:
        - publicKey
      table: signing_key
      type: object
    signing-key-patch-payload:
      additionalProperties: false
      properties:
        disabled:
          $ref: '#/components/schemas/signing-key/properties/disabled'
        name:
          $ref: '#/components/schemas/signing-key/properties/name'
      type: object
    signing-key-response-payload:
      properties:
        $ref: '#/components/schemas/signing-key/properties'
        privateKey:
          type: string
      required:
        - publicKey
        - privateKey
      type: object
    stream:
      additionalProperties: false
      properties:
        broadcasterHost:
          description: Hostname of the broadcaster that transcodes that stream
          type: string
        createdAt:
          description: Timestamp (in milliseconds) at which stream object was created
          example: 1587667174725
          index: true
          readOnly: true
          type: number
        createdByTokenId:
          readOnly: true
          type: string
        createdByTokenName:
          description: Name of the token used to create this object
          readOnly: true
          type: string
        deleted:
          description: Set to true when stream deleted
          type: boolean
        detection:
          additionalProperties: false
          default:
            sceneClassification:
              - name: soccer
              - name: adult
          description: >-
            Custom configuration for audio/video detection algorithms to be run
            on the stream. If no config is provided and a webhook is subscribed
            to the stream.detection event, a default config will be used.
          properties:
            sceneClassification:
              items:
                additionalProperties: false
                description: >-
                  Scene classification options. Must contain name property with
                  one of the well-defined classes supported by detection models.
                properties:
                  name:
                    enum:
                      - soccer
                      - adult
                    type: string
                required:
                  - name
                type: object
              minItems: 1
              type: array
          required:
            - sceneClassification
          type: object
        id:
          example: de7818e7-610a-4057-8f6f-b785dc1e6f88
          readOnly: true
          type: string
        ingestRate:
          description: Rate at which sourceBytes increases (bytes/second)
          example: 1
          type: number
        isActive:
          description: If currently active
          index: true
          type: boolean
        kind:
          example: stream
          readOnly: true
          type: string
        lastSeen:
          example: 1587667174725
          index: true
          type: number
        mistHost:
          description: Hostname of the Mist server that processes that stream
          type: string
        multistream:
          additionalProperties: false
          properties:
            targets:
              description: >-
                References to targets where this stream will be simultaneously
                streamed to
              example:
                - id: PUSH123
                  profile: 720p
              items:
                additionalProperties: false
                properties:
                  id:
                    description: ID of multistream target object where to push this stream
                    type: string
                  profile:
                    description: >-
                      Name of transcoding profile that should be sent. Use
                      "source" for pushing source stream data
                    example: 720p
                    maxLength: 500
                    minLength: 1
                    type: string
                  spec:
                    additionalProperties: false
                    description: >-
                      Inline multistream target object. Will automatically
                      create the target resource to be used by the created
                      stream.
                    properties:
                      name:
                        type: string
                      url:
                        $ref: '#/components/schemas/multistream-target/properties/url'
                    required:
                      - url
                    type: object
                    writeOnly: true
                  videoOnly:
                    default: false
                    description: >-
                      If true, the stream audio will be muted and only silent
                      video will be pushed to the target.
                    type: boolean
                required:
                  - profile
                type: object
              type: array
          type: object
        name:
          example: test_stream
          type: string
        objectStoreId:
          example: D8321C3E-B29C-45EB-A1BB-A623D8BE0F65
          type: string
        outgoingRate:
          description: Rate at which transcodedBytes increases (bytes/second)
          example: 2
          type: number
        parentId:
          description: Points to parent stream object
          example: de7818e7-610a-4057-8f6f-b785dc1e6f88
          index: true
          type: string
        playbackId:
          description: Used to form playback URL
          example: eaw4nk06ts2d0mzb
          type: string
          unique: true
        playbackPolicy:
          $ref: '#/components/schemas/playback-policy'
        presets:
          items:
            enum:
              - P720p60fps16x9
              - P720p30fps16x9
              - P720p30fps4x3
              - P576p30fps16x9
              - P360p30fps16x9
              - P360p30fps4x3
              - P240p30fps16x9
              - P240p30fps4x3
              - P144p30fps16x9
            example: P720p60fps16x9
            type: string
          type: array
        profiles:
          default:
            - name: 240p0
              fps: 0
              bitrate: 250000
              width: 426
              height: 240
            - name: 360p0
              fps: 0
              bitrate: 800000
              width: 640
              height: 360
            - name: 480p0
              fps: 0
              bitrate: 1600000
              width: 854
              height: 480
            - name: 720p0
              fps: 0
              bitrate: 3000000
              width: 1280
              height: 720
          items:
            $ref: '#/components/schemas/ffmpeg-profile'
          type: array
        record:
          description: >-
            Should this stream be recorded? Uses default settings. For more
            customization, create and configure an object store.
          example: false
          type: boolean
        recordObjectStoreId:
          description: ID of object store where to which this stream was recorded
          example: D8321C3E-B29C-45EB-A1BB-A623D8BE0F65
          type: string
        region:
          description: Region in which this session object was created
          example: fra
          type: string
        renditions:
          additionalProperties:
            type: string
          type: object
        sourceBytes:
          example: 1
          type: number
        sourceSegments:
          example: 1
          type: number
        sourceSegmentsDuration:
          description: 'Duration of all the source segments, sec'
          example: 1
          type: number
        streamKey:
          description: Used to form RTMP ingest URL
          example: hgebdhhigq
          type: string
          unique: true
        suspended:
          description: If currently suspended
          type: boolean
        transcodedBytes:
          example: 2
          type: number
        transcodedSegments:
          example: 2
          type: number
        transcodedSegmentsDuration:
          description: 'Duration of all the transcoded segments, sec'
          example: 2
          type: number
        userId:
          example: 66E2161C-7670-4D05-B71D-DA2D6979556F
          index: true
          type: string
        wowza:
          additionalProperties: false
          properties:
            sourceInfo:
              additionalProperties: false
              properties:
                fps:
                  minValue: 1
                  type: integer
                height:
                  minValue: 1
                  type: integer
                width:
                  minValue: 1
                  type: integer
              required:
                - width
                - height
                - fps
              type: object
            streamNameGroups:
              type: array
            transcoderAppConfig:
              type: object
            transcoderTemplateAppConfig:
              type: object
          required:
            - transcoderAppConfig
            - transcoderTemplateAppConfig
            - streamNameGroups
            - sourceInfo
          type: object
      required:
        - name
      table: stream
      type: object
    stream-patch-payload:
      additionalProperties: false
      properties:
        multistream:
          $ref: '#/components/schemas/stream/properties/multistream'
        playbackPolicy:
          $ref: '#/components/schemas/playback-policy'
        record:
          $ref: '#/components/schemas/stream/properties/record'
        suspended:
          $ref: '#/components/schemas/stream/properties/suspended'
      type: object
    stream-set-active-payload:
      properties:
        active:
          $ref: '#/components/schemas/stream/properties/isActive'
        hostName:
          $ref: '#/components/schemas/stream/properties/mistHost'
        startedAt:
          description: Timestamp (in milliseconds) at which the stream started.
          example: 1587667174725
          type: number
      required:
        - active
      type: object
    suspend-user-payload:
      additionalProperties: false
      properties:
        emailTemplate:
          description: Name of template to send to the users regarding the suspension.
          enum:
            - copyright
          type: string
        suspended:
          $ref: '#/components/schemas/user/properties/suspended'
      required:
        - suspended
      type: object
    task:
      additionalProperties: false
      properties:
        createdAt:
          description: Timestamp (in milliseconds) at which task was created
          example: 1587667174725
          readOnly: true
          type: number
        deleted:
          description: Set to true when the task is deleted
          type: boolean
        id:
          description: Task ID
          example: 09F8B46C-61A0-4254-9875-F71F4C605BC7
          index: true
          readOnly: true
          type: string
        inputAssetId:
          description: ID of the input asset
          example: 09F8B46C-61A0-4254-9875-F71F4C605BC7
          index: true
          type: string
        output:
          additionalProperties: false
          description: Output of the task
          properties:
            export:
              additionalProperties: false
              description: Output of the export task
              properties:
                internal:
                  description: |
                    Internal data of the export task that should not be returned
                    to users. Contains internal tracking information like which
                    service was used for the export in case it is maintained by
                    us (e.g. the first-party piñata service).
                  writeOnly: true
                ipfs:
                  additionalProperties: false
                  properties:
                    nftMetadataCid:
                      description: IPFS CID of the default metadata exported for the video
                      type: string
                    nftMetadataGatewayUrl:
                      description: >-
                        URL to access metadata file via HTTP through an IPFS
                        gateway
                      readOnly: true
                      type: string
                    nftMetadataUrl:
                      description: URL for the metadata file with the IPFS protocol
                      readOnly: true
                      type: string
                    videoFileCid:
                      description: IPFS CID of the exported video file
                      type: string
                    videoFileGatewayUrl:
                      description: URL to access file via HTTP through an IPFS gateway
                      readOnly: true
                      type: string
                    videoFileUrl:
                      description: URL for the file with the IPFS protocol
                      readOnly: true
                      type: string
                  required:
                    - videoFileCid
                  type: object
              type: object
            import:
              $ref: '#/components/schemas/task/properties/output/properties/upload'
            transcode:
              additionalProperties: false
              properties:
                asset:
                  additionalProperties: true
                  properties:
                    assetSpec:
                      $ref: '#/components/schemas/asset'
                      type: object
                    metadataFilePath:
                      type: string
                    videoFilePath:
                      type: string
                  type: object
              type: object
            upload:
              additionalProperties: true
              description: Output of the upload task
              properties:
                assetSpec:
                  $ref: '#/components/schemas/asset'
                metadataFilePath:
                  type: string
                  writeOnly: true
                videoFilePath:
                  type: string
                  writeOnly: true
              type: object
          type: object
        outputAssetId:
          description: ID of the output asset
          example: 09F8B46C-61A0-4254-9875-F71F4C605BC7
          index: true
          type: string
        params:
          additionalProperties: false
          description: Parameters of the task
          properties:
            export:
              $ref: '#/components/schemas/export-task-params'
            import:
              $ref: '#/components/schemas/task/properties/params/properties/upload'
            transcode:
              additionalProperties: false
              description: Parameters for the transcode task
              properties:
                profile:
                  $ref: '#/components/schemas/ffmpeg-profile'
              type: object
            transcode-file:
              additionalProperties: false
              description: Parameters for the transcode-file task
              properties:
                catalystPipelineStrategy:
                  description: >-
                    Force to use a specific strategy in the Catalyst pipeline.
                    If not specified, the default strategy that Catalyst is
                    configured for will be used. This field only available for
                    admin users, and is only used for E2E testing.
                  enum:
                    - catalyst
                    - catalyst_ffmpeg
                    - background_external
                    - background_mist
                    - fallback_external
                    - external
                  type: string
                input:
                  additionalProperties: false
                  description: Input video file to transcode
                  properties:
                    url:
                      description: >-
                        URL of a video to transcode, accepts object-store format
                        "s3+https"
                      example: 'https://cdn.livepeer.com/ABC123/filename.mp4'
                      type: string
                  type: object
                outputs:
                  additionalProperties: false
                  description: Output formats
                  properties:
                    hls:
                      additionalProperties: false
                      description: HLS output format
                      properties:
                        path:
                          description: Path for the HLS output
                          example: /samplevideo/hls
                          type: string
                      type: object
                    mp4:
                      additionalProperties: false
                      description: MP4 output format
                      properties:
                        path:
                          description: Path for the MP4 output
                          example: /samplevideo/mp4
                          type: string
                      type: object
                  type: object
                profiles:
                  items:
                    $ref: '#/components/schemas/ffmpeg-profile'
                  type: array
                storage:
                  additionalProperties: false
                  description: Storage for the output files
                  properties:
                    url:
                      description: >-
                        URL of the output storage, accepts object-store format
                        "s3+https"
                      example: 's3+https://accessKeyId:secretAccessKey@s3Endpoint/bucket'
                      type: string
                  type: object
                targetSegmentSizeSecs:
                  description: >-
                    How many seconds the duration of each output segment should
                    be
                  type: number
              type: object
            upload:
              additionalProperties: false
              description: Parameters for the upload task
              properties:
                catalystPipelineStrategy:
                  description: >-
                    Force to use a specific strategy in the Catalyst pipeline.
                    If not specified, the default strategy that Catalyst is
                    configured for will be used. This field only available for
                    admin users, and is only used for E2E testing.
                  enum:
                    - catalyst
                    - catalyst_ffmpeg
                    - background_external
                    - background_mist
                    - fallback_external
                    - external
                  type: string
                encryption:
                  $ref: '#/components/schemas/new-asset-payload/properties/encryption'
                recordedSessionId:
                  description: >-
                    ID of the original recorded session to avoid re-transcoding
                    of the same content. Only used for import task.
                  example: 78df0075-b5f3-4683-a618-1086faca35dc
                  type: string
                uploadedObjectKey:
                  description: S3 object key of the uploaded asset
                  example: ABC123/filename.mp4
                  type: string
                url:
                  description: URL of the asset to "upload"
                  example: 'https://cdn.livepeer.com/ABC123/filename.mp4'
                  type: string
              type: object
          type: object
        scheduledAt:
          description: |
            Timestamp (in milliseconds) at which the task was scheduled for
            execution (e.g. after file upload finished).
          example: 1587667174725
          readOnly: true
          type: number
        status:
          additionalProperties: false
          description: Status of the task
          properties:
            errorMessage:
              description: Error message if the task failed
              type: string
            phase:
              description: Phase of the task
              enum:
                - pending
                - waiting
                - running
                - failed
                - completed
                - cancelled
              type: string
            progress:
              description: Current progress of the task in a 0-1 ratio
              type: number
            retries:
              description: Number of retries done on the task
              type: number
            step:
              description: Step of the task processing
              type: string
              writeOnly: true
            updatedAt:
              description: Timestamp (in milliseconds) at which task was updated
              example: 1587667174725
              type: number
          readOnly: true
          required:
            - phase
            - updatedAt
          type: object
        type:
          description: Type of the task
          enum:
            - upload
            - import
            - export
            - transcode
            - transcode-file
          type: string
        userId:
          description: User ID of the task owner
          example: 66E2161C-7670-4D05-B71D-DA2D6979556F
          index: true
          readOnly: true
          type: string
      table: task
      type: object
    transcode-asset-payload:
      additionalProperties: false
      properties:
        assetId:
          description: ID of the asset to transcode
          type: string
        name:
          description: >-
            Name of the asset. This is not necessarily the filename, can be a
            custom name or title
          example: filename.mp4
          type: string
        objectStoreId:
          description: Object store ID where the asset is stored
          example: 09F8B46C-61A0-4254-9875-F71F4C605BC7
          type: string
          writeOnly: true
        profile:
          $ref: '#/components/schemas/ffmpeg-profile'
      required:
        - name
        - profile
    transcode-payload:
      additionalProperties: false
      properties:
        catalystPipelineStrategy:
          $ref: >-
            #/components/schemas/task/properties/params/properties/upload/properties/catalystPipelineStrategy
        input:
          oneOf:
            - type: object
              additionalProperties: false
              description: URL input video
              required:
                - url
              properties:
                url:
                  type: string
                  format: uri
                  pattern: '^(https?|ipfs|ar)://'
                  description: URL of the video to transcode
                  example: 'https://s3.amazonaws.com/bucket/file.mp4'
            - type: object
              additionalProperties: false
              description: S3-like storage input video
              required:
                - type
                - endpoint
                - bucket
                - path
                - credentials
              properties:
                type:
                  type: string
                  enum:
                    - s3
                  description: >-
                    Type of service. This is optional and defaults to `url` if
                    ŚURL field is provided.
                endpoint:
                  type: string
                  format: uri
                  pattern: '^http(s)?://'
                  description: Service endpoint URL
                  example: 'https://gateway.storjshare.io'
                bucket:
                  type: string
                  description: Bucket with input file
                  example: inputbucket
                path:
                  type: string
                  description: Path to the input file inside the bucket
                  example: /path/file.mp4
                credentials:
                  type: object
                  additionalProperties: false
                  required:
                    - accessKeyId
                    - secretAccessKey
                  description: Credentials for the private input video storage
                  properties:
                    accessKeyId:
                      type: string
                      description: Access Key ID
                      example: AKIAIOSFODNN7EXAMPLE
                    secretAccessKey:
                      type: string
                      description: Secret Access Key
                      example: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
        outputs:
          additionalProperties: false
          description: Output formats
          properties:
            hls:
              additionalProperties: false
              description: HLS output format
              properties:
                path:
                  description: Path for the HLS output
                  example: /samplevideo/hls
                  type: string
              required:
                - path
              type: object
            mp4:
              additionalProperties: false
              description: MP4 output format
              properties:
                path:
                  description: Path for the MP4 output
                  example: /samplevideo/mp4
                  type: string
              required:
                - path
              type: object
          type: object
        profiles:
          items:
            $ref: '#/components/schemas/ffmpeg-profile'
          type: array
        storage:
          oneOf:
            - type: object
              additionalProperties: false
              required:
                - type
                - endpoint
                - bucket
                - credentials
              description: Storage for the output files
              properties:
                type:
                  type: string
                  enum:
                    - s3
                  description: Type of service used for output files
                endpoint:
                  type: string
                  format: uri
                  pattern: '^http(s)?://'
                  description: Service endpoint URL
                  example: 'https://gateway.storjshare.io'
                bucket:
                  type: string
                  description: Bucket with output files
                  example: outputbucket
                credentials:
                  type: object
                  additionalProperties: false
                  required:
                    - accessKeyId
                    - secretAccessKey
                  description: Credentials for the output video storage
                  properties:
                    accessKeyId:
                      type: string
                      description: Access Key ID
                      example: AKIAIOSFODNN7EXAMPLE
                    secretAccessKey:
                      type: string
                      description: Secret Access Key
                      example: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
            - type: object
              additionalProperties: false
              required:
                - type
                - credentials
              description: Storage for the output files
              properties:
                type:
                  type: string
                  enum:
                    - web3.storage
                  description: Type of service used for output files
                credentials:
                  type: object
                  additionalProperties: false
                  required:
                    - proof
                  description: >-
                    Delegation proof for Livepeer to be able to upload to
                    web3.storage
                  properties:
                    proof:
                      type: string
                      description: Base64 encoded UCAN delegation proof
                      example: >-
                        EaJlcm9vdHOAZ3ZlcnNpb24BmgIBcRIg2uxHpcPYSWNtifMKFkPC7IEDvFDCxCd3ADViv0coV7SnYXNYRO2hA0AnblHEW38s3lSlcwaDjPn
        targetSegmentSizeSecs:
          description: How many seconds the duration of each output segment should be
          type: number
      required:
        - input
        - storage
        - outputs
    update-customer-payment-method:
      additionalProperties: false
      properties:
        stripeCustomerId:
          description: stripe customer id
          example: cus_xxxxxxxxxxxxxx
          type: string
        stripeCustomerPaymentMethodId:
          description: stripe payment method id
          example: pm_xxxxxxxxxxxxxxxxxxxxxxxx
          type: string
      required:
        - stripeCustomerId
        - stripeCustomerPaymentMethodId
      type: object
    update-subscription:
      additionalProperties: false
      properties:
        stripeCustomerId:
          description: stripe customer id
          example: cus_xxxxxxxxxxxxxx
          type: string
        stripeCustomerPaymentMethodId:
          description: stripe payment method id
          example: pm_xxxxxxxxxxxxxxxxxxxxxxxx
          type: string
        stripeCustomerSubscriptionId:
          description: stripe subscription id
          example: sub_xxxxxxxxxxxxxx
          type: string
        stripeProductId:
          description: stripe product id
          enum:
            - prod_0
            - prod_1
            - prod_2
          type: string
      required:
        - stripeCustomerId
        - stripeProductId
      type: object
    usage:
      additionalProperties: false
      properties:
        date:
          example: usage
          readOnly: true
          type: number
        id:
          description: day associated with usage
          example: {}
          index: true
          type: string
          unique: true
        kind:
          example: usage
          readOnly: true
          type: string
        sourceSegments:
          example: 200000
          type: number
        sourceSegmentsDuration:
          example: 200000
          type: number
        streamCount:
          example: 200000
          type: number
        transcodedSegments:
          example: 200000
          type: number
        transcodedSegmentsDuration:
          example: 200000
          type: number
      table: usage
      type: object
    user:
      additionalProperties: false
      properties:
        admin:
          example: true
          type: boolean
        ccBrand:
          example: 1234
          type: string
        ccLast4:
          example: 1234
          type: string
        createdAt:
          description: Timestamp (in milliseconds) at which user object was created
          example: 1587667174725
          type: number
        email:
          description: user email address
          example: useremail@gmail.com
          index: true
          type: string
          unique: true
        emailValid:
          example: true
          type: boolean
        emailValidToken:
          example: E1F53135E559C253
          type: string
          writeOnly: true
        firstName:
          example: Joe
          type: string
        id:
          example: abc123
          readOnly: true
          type: string
        internal:
          description: Internal user that should be disregarded from usage information
          example: false
          type: boolean
        isTestUser:
          description: User creates test streams and playbackIds should be flagged as such
          example: false
          type: boolean
        kind:
          example: user
          readOnly: true
          type: string
        lastName:
          example: Smith
          type: string
        lastSeen:
          description: Timestamp (in milliseconds) at which user's password was used
          example: 1587667174725
          type: number
        lastStreamedAt:
          description: >-
            Timestamp (in milliseconds) at which user streamed RTMP stream last
            time
          example: 1587667174725
          type: number
        organization:
          example: Livepeer
          type: string
        password:
          example: thisisapassword
          maxLength: 64
          minLength: 64
          type: string
          writeOnly: true
        phone:
          example: 2034212122
          type: string
        planChangedAt:
          description: Timestamp (in milliseconds) at which user object was verified
          example: 1587667174725
          type: number
        recaptchaToken:
          description: Recaptcha v3 Token
          example: >-
            03AGdBq24blDQQCyt9BSYjS0YZ3-tZapaQ5xO2-oykG_4dS_91TzH9qOziOwXbff_QiDOsXmWKxqtOrmOEx7qjijNhbexBzvNjM6HbbhXcji1rKcxxQRsL-t3SbycwZuNXos9OjnrYmfV9F3zsy1o73ia5Wlw_Zcf1jwbm3n-yQ2epifcMHXJhsUrqmUe6a1J1mPaD2heHvCOS3vYm0rWijdMl2E4bXQf75BiWvbLKxCWv5ZF8279nCMcGyJBIw1kno-A0x5KTOlEVxV369nz12lkvRfOtRABKB49jMTygAc2BKh9GBlAYGO6PBPoIk7_BCo7I_hsHoJeT4c80ucOPraZby0QJM5jcCQcqVCYrcaPKPiUMcIEixIhB5FAfDs88uYqDWMcgZdMRKCvmxEC3ONDVDtq0nLMc4rniuC5sQTz1E4D6SR_Adik
          type: string
          writeOnly: true
        salt:
          example: E1F53135E559C253
          type: string
          writeOnly: true
        stripeCustomerId:
          example: cus_Jv6KvgT0DCH8HU
          type: string
          unique: true
        stripeCustomerPaymentMethodId:
          example: pm_2FSSNNJfrKDAwlJ9n4EN15Du
          type: string
        stripeCustomerSubscriptionId:
          example: sub_I29pdyfOTPBkjb
          type: string
        stripeProductId:
          enum:
            - prod_0
            - prod_1
            - prod_2
          type: string
        suspended:
          type: boolean
        verifiedAt:
          description: Timestamp (in milliseconds) at which user object was verified
          example: 1587667174725
          type: number
      required:
        - email
        - password
      table: users
      type: object
    user-verification:
      additionalProperties: false
      properties:
        email:
          description: user email address
          example: useremail@gmail.com
          index: true
          type: string
          unique: true
        emailValidToken:
          example: E1F53135E559C253
          type: string
          writeOnly: true
      required:
        - email
        - emailValidToken
      type: object
    verify-email:
      additionalProperties: false
      properties:
        email:
          description: user email address
          example: useremail@gmail.com
          type: string
          unique: true
      required:
        - email
      type: object
    webhook:
      additionalProperties: false
      properties:
        createdAt:
          description: Timestamp (in milliseconds) at which stream object was created
          example: 1587667174725
          readOnly: true
          type: number
        deleted:
          default: false
          type: boolean
        event:
          $ref: '#/components/schemas/webhook/properties/events/items'
          deprecated: true
          description: '@deprecated Non-persisted field. To be used on creation API only.'
          writeOnly: true
        events:
          index: true
          indexType: gin
          items:
            enum:
              - stream.started
              - stream.detection
              - stream.idle
              - recording.ready
              - recording.started
              - multistream.connected
              - multistream.error
              - multistream.disconnected
              - playback.user.new
              - playback.accessControl
              - asset.created
              - asset.updated
              - asset.failed
              - asset.ready
              - asset.deleted
              - task.spawned
              - task.updated
              - task.completed
              - task.failed
            type: string
          type: array
        id:
          example: de7818e7-610a-4057-8f6f-b785dc1e6f88
          readOnly: true
          type: string
        kind:
          example: webhook
          readOnly: true
          type: string
        name:
          type: string
        sharedSecret:
          description: shared secret used to sign the webhook payload
          type: string
          writeOnly: true
        status:
          description: status of webhook
          properties:
            lastFailure:
              description: failure timestamp and error message with status code
              properties:
                error:
                  description: Webhook failure error message
                  example: Error message
                  readOnly: true
                  type: string
                response:
                  description: Webhook failure response
                  example: Response body
                  readOnly: true
                  type: string
                statusCode:
                  description: Webhook failure status code
                  example: 500
                  readOnly: true
                  type: number
                timestamp:
                  description: Timestamp (in milliseconds) at which the webhook last failed
                  example: 1587667174725
                  readOnly: true
                  type: number
              readOnly: true
              type: object
            lastTriggeredAt:
              description: >-
                Timestamp (in milliseconds) at which the webhook last was
                triggered
              example: 1587667174725
              type: number
          readOnly: true
          type: object
        streamId:
          description: streamId of the stream on which the webhook is applied
          type: string
        url:
          format: uri
          pattern: '^http(s)?://'
          type: string
        userId:
          index: true
          readOnly: true
          type: string
      required:
        - name
        - url
      table: webhook
      type: object
    webhook-patch-payload:
      additionalProperties: false
      properties:
        events:
          $ref: '#/components/schemas/webhook/properties/events'
        name:
          $ref: '#/components/schemas/webhook/properties/name'
        sharedSecret:
          $ref: '#/components/schemas/webhook/properties/sharedSecret'
        streamId:
          $ref: '#/components/schemas/webhook/properties/streamId'
        url:
          $ref: '#/components/schemas/webhook/properties/url'
      type: object
    webhook-response:
      additionalProperties: false
      properties:
        createdAt:
          description: >-
            Timestamp (in milliseconds) at which webhook response object was
            created
          example: 1587667174725
          readOnly: true
          type: number
        duration:
          type: number
        eventId:
          index: true
          readOnly: true
          type: string
        id:
          example: de7818e7-610a-4057-8f6f-b785dc1e6f88
          readOnly: true
          type: string
        kind:
          example: webhookResponse
          readOnly: true
          type: string
        response:
          additionalProperties: false
          properties:
            body:
              type: string
            headers:
              additionalProperties:
                items:
                  type: string
                type: array
              type: object
            redirected:
              type: boolean
            status:
              type: number
            statusText:
              type: string
          type: object
        statusCode:
          default: 0
          type: number
        webhookId:
          index: true
          readOnly: true
          type: string
      required:
        - webhookId
        - statusCode
      table: webhook_response
      type: object
    webhook-status-payload:
      additionalProperties: false
      properties:
        errorMessage:
          description: Error message if the webhook failed to process the event
          type: string
        response:
          $ref: '#/components/schemas/webhook-response'
      type: object
info:
  description: >-
    This API reference provides documentation for the Livepeer API - the world's
    open video infrastructure
  termsOfService: 'https://livepeer.org/terms-of-service'
  title: Livepeer API Reference
  version: 1.0.0
openapi: 3.0.1
paths:
  /asset:
    get:
      description: gets a list of assets defined by the user
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/asset'
                type: array
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Error
  /multistream/target:
    get:
      description: Lists existing multistream targets
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/multistream-target'
                type: array
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Error
    post:
      description: Creates new multistream target
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/multistream-target'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/multistream-target'
                type: array
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Error
  '/multistream/target/{id}':
    delete:
      description: Deletes an existing multistream target
      responses:
        '204':
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Error
    get:
      description: Gets a specific multistream target details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/multistream-target'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Error
    parameters:
      - name: id
        description: ID of the multistream target
        in: path
        required: true
        schema:
          type: string
    patch:
      description: Enables or disables an existing multistream target
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/multistream-target-patch-payload'
        required: true
      responses:
        '204':
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Error
  /room:
    post:
      description: create a new room
      responses:
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Error
  /stream:
    get:
      description: Lists streams
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/stream'
                type: array
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Error
    post:
      description: Creates a stream
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stream'
              type: object
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/stream'
                type: array
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Error
  '/stream/{id}':
    get:
      description: Gets a specific stream details
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stream'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Error
    parameters:
      - name: id
        description: ID of the stream
        in: path
        required: true
        schema:
          type: string
    patch:
      description: Patch a specific stream
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stream-patch-payload'
        required: true
      responses:
        '204':
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Error
  /webhook:
    get:
      description: gets a list of webhooks defined by the user
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/webhook'
                type: array
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Error
    post:
      description: creates a new webhook
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Error
  '/webhook/{id}':
    delete:
      description: deletes a specific webhook details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Error
    get:
      description: gets a specific webhook details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Error
    put:
      description: updates a specific webhook
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/webhook'
          description: Success
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
          description: Error
servers:
  - url: 'https://livepeer.studio/api'
