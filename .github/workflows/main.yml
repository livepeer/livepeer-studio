on: push
jobs:
  build:
    runs-on: ubuntu-18.04
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_HOST_AUTH_METHOD: "trust"
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      rabbitmq:
        image: rabbitmq@sha256:f0be9e47ec42081a36593dfc6604274a623caed074fc043e0a927fbd1533dc20
        env:
          RABBITMQ_DEFAULT_VHOST: "livepeer"
        ports:
          - 5672:5672
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Tags
        id: tags
        uses: livepeer/action-gh-release-tags@v0

      - name: docker login
        env:
          DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
        run: |
          # docker login
          docker version
          docker login -u $DOCKER_USER -p $DOCKER_PASS

      - name: yarn install
        run: |
          yarn install --frozen-lockfile

      - name: yarn test
        run: |
          yarn test

      - name: docker build
        env:
          DOCKER_TAGS: ${{ steps.tags.outputs.tags }}
          VERSION: ${{ steps.tags.outputs.version }}
          CF_API_KEY: ${{ secrets.CF_API_KEY }}
          CF_EMAIL: ${{ secrets.CF_EMAIL }}
          DOCKER_BUILDKIT: 1
        run: |
          yarn run lerna-run docker:build --scope=@livepeer.com/api
          yarn run lerna-run docker:push --scope=@livepeer.com/api

          # Livepeer internal build alerting
          curl -X POST https://holy-bread-207a.livepeer.workers.dev
